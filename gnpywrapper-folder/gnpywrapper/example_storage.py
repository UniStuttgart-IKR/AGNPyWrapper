# added from gnpy package: 
# the intention here is to be independet of gnpy and provide full python dictionaries

from collections import namedtuple
Model_openroadm_ila = namedtuple('Model_openroadm_ila', 'nf_coef') #by gnpy

def get_from_storage_of_network_element_configurations(type, key): #by jensk
    
    storage_of_network_element_configurations = {}
    
    
    # Transceiver's
    storage_of_network_element_configurations['Transceiver'] = {}
    
    storage_of_network_element_configurations['Transceiver']['1'] = {'metadata': {'location': {'city': 'source<br>site', 'latitude': 0, 'longitude': 0, 'region': None}}, 'uid': 'trx_source'}
    storage_of_network_element_configurations['Transceiver']['2'] = {'metadata': {'location': {'city': 'destination<br>site', 'latitude': 0, 'longitude': 80, 'region': None}}, 'uid': 'trx_destination'}
    
    # Roadm's
    storage_of_network_element_configurations['Roadm'] = {}
    
    storage_of_network_element_configurations['Roadm']['1'] = {'metadata': {'location': {'city': 'source site', 'latitude': 0, 'longitude': 0, 'region': None}}, 'params': {'restrictions': {'booster_variety_list': ['openroadm_mw_mw_booster'], 'preamp_variety_list': ['openroadm_mw_mw_preamp_worstcase_ver5']}, 'target_pch_out_db': -20, 'add_drop_osnr': 33, 'pmd': 3e-12, 'pdl': 1.5}, 'uid': 'roadm_source', 'type_variety': 'default'}
    storage_of_network_element_configurations['Roadm']['2'] = {'metadata': {'location': {'city': 'destination site', 'latitude': 0, 'longitude': 80, 'region': None}}, 'params': {'restrictions': {'booster_variety_list': ['openroadm_mw_mw_booster'], 'preamp_variety_list': ['openroadm_mw_mw_preamp_worstcase_ver5']}, 'target_pch_out_db': -20, 'add_drop_osnr': 33, 'pmd': 3e-12, 'pdl': 1.5}, 'uid': 'roadm_destination', 'type_variety': 'default'}
    
    # Fiber's
    storage_of_network_element_configurations['Fiber'] = {}
    
    storage_of_network_element_configurations['Fiber']['1'] = {'metadata': {'location': {'city': None, 'latitude': 0, 'longitude': 40.0, 'region': None}}, 'params': {'con_in': 0, 'con_out': 0, 'length': 70.0, 'length_units': 'km', 'loss_coef': 0.2, 'type_variety': 'SSMF', 'dispersion': 1.67e-05, 'effective_area': 8.3e-11, 'pmd_coef': 1.265e-15}, 'uid': 'fiber', 'type_variety': 'SSMF'}

    #EDFA's
    storage_of_network_element_configurations['Edfa'] = {}
    
    #storage_of_network_element_configurations['Edfa']['1'] = {'metadata': {'location': {'city': 'source site', 'latitude': 0, 'longitude': 0, 'region': None}}, 'operational': {'delta_p': 0.0, 'gain_target': 22.0, 'out_voa': 0, 'tilt_target': 0}, 'uid': 'Edfa_booster_roadm_source_to_fiber', 'params': {'f_min': 191350000000000.0, 'f_max': 196100000000000.0, 'type_variety': 'openroadm_mw_mw_booster', 'type_def': 'openroadm_booster', 'gain_flatmax': 32, 'gain_min': 0, 'p_max': 22, 'nf_model': <gnpy.tools.json_io.Model_openroadm_booster object at 0x000002861D7AD430>, 'dual_stage_model': None, 'preamp_variety': None, 'booster_variety': None, 'nf_min': None, 'nf_max': None, 'nf_coef': None, 'nf0': None, 'nf_fit_coeff': None, 'nf_ripple': [0.0], 'dgt': [1.0, 1.017807767853702, 1.0356155337864215, 1.0534217504465226, 1.0712204022764056, 1.0895983485572227, 1.108555289615659, 1.1280891949729075, 1.1476135933863398, 1.1672278304018044, 1.1869318618366975, 1.2067249615595257, 1.2264996957264114, 1.2428104897182262, 1.2556591482982988, 1.2650555289898042, 1.2744470198196236, 1.2838336236692311, 1.2932153453410835, 1.3040618749785347, 1.316383926863083, 1.3301807335621048, 1.3439818461440451, 1.3598972673004606, 1.3779439775587023, 1.3981208704326855, 1.418273806730323, 1.4340878115214444, 1.445565137158368, 1.45273959485914, 1.4599103316162523, 1.4670307626366115, 1.474100442252211, 1.48111939735681, 1.488134243479226, 1.495145456062699, 1.502153039909686, 1.5097346239790443, 1.5178910621476225, 1.5266220576235803, 1.5353620432989845, 1.545374152761467, 1.5566577309558969, 1.569199764184379, 1.5817353179379183, 1.5986915141218316, 1.6201194134191075, 1.6460167077689267, 1.6719047669939942, 1.6918150918099673, 1.7057507692361864, 1.7137640932265894, 1.7217732861435076, 1.7297783508684146, 1.737780757913635, 1.7459181197626403, 1.7541903672600494, 1.7625959636196327, 1.7709972329654864, 1.7793941781790852, 1.7877868031023945, 1.7961751115773796, 1.8045606557581335, 1.8139629377087627, 1.824381436842932, 1.835814081380705, 1.847275503201129, 1.862235672444246, 1.8806927939516411, 1.9026104247588487, 1.9245345552113182, 1.9482128147680253, 1.9736443063300082, 2.0008103857988204, 2.0279625371819305, 2.055100772005235, 2.082225099873648, 2.1183028432496016, 2.16337565384239, 2.2174389328192197, 2.271520771371253, 2.322373696229342, 2.3699990328716107, 2.414398437185221, 2.4587748041127506, 2.499446286796604, 2.5364027376452056, 2.5696460593920065, 2.602860350286428, 2.630396440815385, 2.6521732021128046, 2.6681935771243177, 2.6841217449620203, 2.6947834587664494, 2.705443819238505, 2.714526681131686], 'gain_ripple': [0.0], 'tilt_ripple': 0, 'f_ripple_ref': None, 'out_voa_auto': False, 'allowed_for_design': False, 'raman': False, 'pmd': 0, 'pdl': 0, 'advance_configurations_from_json': None}, 'type_variety': 'openroadm_mw_mw_booster'}
    storage_of_network_element_configurations['Edfa']['1b'] = {'metadata': {'location': {'city': 'source site', 'latitude': 0, 'longitude': 0, 'region': None}}, 'operational': {'delta_p': 0.0, 'gain_target': 22.0, 'out_voa': 0, 'tilt_target': 0}, 'uid': 'Edfa_booster_roadm_source_to_fiber', 'params': {'f_min': 191350000000000.0, 'f_max': 196100000000000.0, 'type_variety': 'openroadm_mw_mw_booster', 'type_def': 'openroadm_booster', 'gain_flatmax': 32, 'gain_min': 0, 'p_max': 22, 'nf_model': None, 'dual_stage_model': None, 'preamp_variety': None, 'booster_variety': None, 'nf_min': None, 'nf_max': None, 'nf_coef': None, 'nf0': None, 'nf_fit_coeff': None, 'nf_ripple': [0.0], 'dgt': [1.0, 1.017807767853702, 1.0356155337864215, 1.0534217504465226, 1.0712204022764056, 1.0895983485572227, 1.108555289615659, 1.1280891949729075, 1.1476135933863398, 1.1672278304018044, 1.1869318618366975, 1.2067249615595257, 1.2264996957264114, 1.2428104897182262, 1.2556591482982988, 1.2650555289898042, 1.2744470198196236, 1.2838336236692311, 1.2932153453410835, 1.3040618749785347, 1.316383926863083, 1.3301807335621048, 1.3439818461440451, 1.3598972673004606, 1.3779439775587023, 1.3981208704326855, 1.418273806730323, 1.4340878115214444, 1.445565137158368, 1.45273959485914, 1.4599103316162523, 1.4670307626366115, 1.474100442252211, 1.48111939735681, 1.488134243479226, 1.495145456062699, 1.502153039909686, 1.5097346239790443, 1.5178910621476225, 1.5266220576235803, 1.5353620432989845, 1.545374152761467, 1.5566577309558969, 1.569199764184379, 1.5817353179379183, 1.5986915141218316, 1.6201194134191075, 1.6460167077689267, 1.6719047669939942, 1.6918150918099673, 1.7057507692361864, 1.7137640932265894, 1.7217732861435076, 1.7297783508684146, 1.737780757913635, 1.7459181197626403, 1.7541903672600494, 1.7625959636196327, 1.7709972329654864, 1.7793941781790852, 1.7877868031023945, 1.7961751115773796, 1.8045606557581335, 1.8139629377087627, 1.824381436842932, 1.835814081380705, 1.847275503201129, 1.862235672444246, 1.8806927939516411, 1.9026104247588487, 1.9245345552113182, 1.9482128147680253, 1.9736443063300082, 2.0008103857988204, 2.0279625371819305, 2.055100772005235, 2.082225099873648, 2.1183028432496016, 2.16337565384239, 2.2174389328192197, 2.271520771371253, 2.322373696229342, 2.3699990328716107, 2.414398437185221, 2.4587748041127506, 2.499446286796604, 2.5364027376452056, 2.5696460593920065, 2.602860350286428, 2.630396440815385, 2.6521732021128046, 2.6681935771243177, 2.6841217449620203, 2.6947834587664494, 2.705443819238505, 2.714526681131686], 'gain_ripple': [0.0], 'tilt_ripple': 0, 'f_ripple_ref': None, 'out_voa_auto': False, 'allowed_for_design': False, 'raman': False, 'pmd': 0, 'pdl': 0, 'advance_configurations_from_json': None}, 'type_variety': 'openroadm_mw_mw_booster'}
    
    storage_of_network_element_configurations['Edfa']['2'] = {'metadata': {'location': {'city': 'destination site', 'latitude': 0, 'longitude': 80, 'region': None}}, 'operational': {'delta_p': 0.0, 'gain_target': 22.0, 'out_voa': 0, 'tilt_target': 0}, 'uid': 'Edfa_preamp_roadm_destination_from_fiber', 'params': {'f_min': 191350000000000.0, 'f_max': 196100000000000.0, 'type_variety': 'openroadm_mw_mw_preamp_worstcase_ver5', 'type_def': 'openroadm', 'gain_flatmax': 27, 'gain_min': 0, 'p_max': 22, 'nf_model': Model_openroadm_ila(nf_coef=[-0.0005952, -0.0625, -1.071, 27.99]), 'dual_stage_model': None, 'preamp_variety': None, 'booster_variety': None, 'nf_min': None, 'nf_max': None, 'nf_coef': None, 'nf0': None, 'nf_fit_coeff': None, 'nf_ripple': [0.0], 'dgt': [1.0, 1.017807767853702, 1.0356155337864215, 1.0534217504465226, 1.0712204022764056, 1.0895983485572227, 1.108555289615659, 1.1280891949729075, 1.1476135933863398, 1.1672278304018044, 1.1869318618366975, 1.2067249615595257, 1.2264996957264114, 1.2428104897182262, 1.2556591482982988, 1.2650555289898042, 1.2744470198196236, 1.2838336236692311, 1.2932153453410835, 1.3040618749785347, 1.316383926863083, 1.3301807335621048, 1.3439818461440451, 1.3598972673004606, 1.3779439775587023, 1.3981208704326855, 1.418273806730323, 1.4340878115214444, 1.445565137158368, 1.45273959485914, 1.4599103316162523, 1.4670307626366115, 1.474100442252211, 1.48111939735681, 1.488134243479226, 1.495145456062699, 1.502153039909686, 1.5097346239790443, 1.5178910621476225, 1.5266220576235803, 1.5353620432989845, 1.545374152761467, 1.5566577309558969, 1.569199764184379, 1.5817353179379183, 1.5986915141218316, 1.6201194134191075, 1.6460167077689267, 1.6719047669939942, 1.6918150918099673, 1.7057507692361864, 1.7137640932265894, 1.7217732861435076, 1.7297783508684146, 1.737780757913635, 1.7459181197626403, 1.7541903672600494, 1.7625959636196327, 1.7709972329654864, 1.7793941781790852, 1.7877868031023945, 1.7961751115773796, 1.8045606557581335, 1.8139629377087627, 1.824381436842932, 1.835814081380705, 1.847275503201129, 1.862235672444246, 1.8806927939516411, 1.9026104247588487, 1.9245345552113182, 1.9482128147680253, 1.9736443063300082, 2.0008103857988204, 2.0279625371819305, 2.055100772005235, 2.082225099873648, 2.1183028432496016, 2.16337565384239, 2.2174389328192197, 2.271520771371253, 2.322373696229342, 2.3699990328716107, 2.414398437185221, 2.4587748041127506, 2.499446286796604, 2.5364027376452056, 2.5696460593920065, 2.602860350286428, 2.630396440815385, 2.6521732021128046, 2.6681935771243177, 2.6841217449620203, 2.6947834587664494, 2.705443819238505, 2.714526681131686], 'gain_ripple': [0.0], 'tilt_ripple': 0, 'f_ripple_ref': None, 'out_voa_auto': False, 'allowed_for_design': False, 'raman': False, 'pmd': 0, 'pdl': 0, 'advance_configurations_from_json': None}, 'type_variety': 'openroadm_mw_mw_preamp_worstcase_ver5'}

    
    return storage_of_network_element_configurations[type][key]


from numpy import array

# added from gnpy package: 
# the intention here is to be independet of gnpy and provide full python dictionaries

# from gnpy.core.info import Pref, ReferenceCarrier

class Pref(namedtuple('Pref', 'p_span0, p_spani, ref_carrier')): #by gnpy
    """noiseless reference power in dBm:

    p_span0: inital target carrier power for a reference channel defined by user
    p_spani: carrier power after element i for a reference channel defined by user
    ref_carrier records the baud rate of the reference channel
    """

from dataclasses import dataclass
@dataclass
class ReferenceCarrier: #by gnpy
    """Reference channel type is used to determine target power out of ROADM for the reference channel when
    constant power spectral density (PSD) equalization is set. Reference channel is the type that has been defined
    in SI block and used for the initial design of the network.
    Computing the power out of ROADM for the reference channel is required to correctly compute the loss
    experienced by p_span_i in Roadm element.

    Baud rate is required to find the target power in constant PSD: power = PSD_target * baud_rate.
    For example, if target PSD is 3.125e4mW/GHz and reference carrier type a 32 GBaud channel then
    output power should be -20 dBm and for a 64 GBaud channel power target would need 3 dB more: -17 dBm.

    Slot width is required to find the target power in constant PSW (constant power per slot width equalization):
    power = PSW_target * slot_width.
    For example, if target PSW is 2e4mW/GHz and reference carrier type a 32 GBaud channel in a 50GHz slot width then
    output power should be -20 dBm and for a 64 GBaud channel  in a 75 GHz slot width, power target would be -18.24 dBm.

    Other attributes (like slot_width or roll-off) may be added there for future equalization purpose.
    """
    baud_rate: float
    slot_width: float

def get_from_storage_of_spectral_information(key): #by_jensk
    
    storage_of_spectral_information = {}
    
    storage_of_spectral_information['example_1'] = {'ase': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0.]),
 'baud_rate': array([3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10, 3.007e+10,
       3.007e+10, 3.007e+10]),
 'chromatic_dispersion': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0.]),
 'delta_pdb_per_channel': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0.]),
 'frequency': array([1.913375e+14, 1.913750e+14, 1.914125e+14, 1.914500e+14,
       1.914875e+14, 1.915250e+14, 1.915625e+14, 1.916000e+14,
       1.916375e+14, 1.916750e+14, 1.917125e+14, 1.917500e+14,
       1.917875e+14, 1.918250e+14, 1.918625e+14, 1.919000e+14,
       1.919375e+14, 1.919750e+14, 1.920125e+14, 1.920500e+14,
       1.920875e+14, 1.921250e+14, 1.921625e+14, 1.922000e+14,
       1.922375e+14, 1.922750e+14, 1.923125e+14, 1.923500e+14,
       1.923875e+14, 1.924250e+14, 1.924625e+14, 1.925000e+14,
       1.925375e+14, 1.925750e+14, 1.926125e+14, 1.926500e+14,
       1.926875e+14, 1.927250e+14, 1.927625e+14, 1.928000e+14,
       1.928375e+14, 1.928750e+14, 1.929125e+14, 1.929500e+14,
       1.929875e+14, 1.930250e+14, 1.930625e+14, 1.931000e+14,
       1.931375e+14, 1.931750e+14, 1.932125e+14, 1.932500e+14,
       1.932875e+14, 1.933250e+14, 1.933625e+14, 1.934000e+14,
       1.934375e+14, 1.934750e+14, 1.935125e+14, 1.935500e+14,
       1.935875e+14, 1.936250e+14, 1.936625e+14, 1.937000e+14,
       1.937375e+14, 1.937750e+14, 1.938125e+14, 1.938500e+14,
       1.938875e+14, 1.939250e+14, 1.939625e+14, 1.940000e+14,
       1.940375e+14, 1.940750e+14, 1.941125e+14, 1.941500e+14,
       1.941875e+14, 1.942250e+14, 1.942625e+14, 1.943000e+14,
       1.943375e+14, 1.943750e+14, 1.944125e+14, 1.944500e+14,
       1.944875e+14, 1.945250e+14, 1.945625e+14, 1.946000e+14,
       1.946375e+14, 1.946750e+14, 1.947125e+14, 1.947500e+14,
       1.947875e+14, 1.948250e+14, 1.948625e+14, 1.949000e+14,
       1.949375e+14, 1.949750e+14, 1.950125e+14, 1.950500e+14,
       1.950875e+14, 1.951250e+14, 1.951625e+14, 1.952000e+14,
       1.952375e+14, 1.952750e+14, 1.953125e+14, 1.953500e+14,
       1.953875e+14, 1.954250e+14, 1.954625e+14, 1.955000e+14,
       1.955375e+14, 1.955750e+14, 1.956125e+14, 1.956500e+14,
       1.956875e+14, 1.957250e+14, 1.957625e+14, 1.958000e+14,
       1.958375e+14, 1.958750e+14, 1.959125e+14, 1.959500e+14,
       1.959875e+14, 1.960250e+14, 1.960625e+14, 1.961000e+14]),
 'label': array(['30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G', '30.07G', '30.07G', '30.07G', '30.07G',
       '30.07G', '30.07G'], dtype='<U6'),
 'latency': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0.]),
 'nli': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0.]),
 'pdl': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0.]),
 'pmd': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0.]),
 'ref_power': Pref(p_span0=0.0, p_spani=0.0, ref_carrier=ReferenceCarrier(baud_rate=32000000000.0, slot_width=50000000000.0)),
 'roll_off': array([0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
       0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
       0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
       0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
       0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
       0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
       0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
       0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
       0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
       0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
       0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15,
       0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15]),
 'signal': array([0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
       0.001, 0.001]),
 'slot_width': array([3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10, 3.75e+10,
       3.75e+10, 3.75e+10]),
 'tx_osnr': array([34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
       34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
       34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
       34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
       34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
       34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
       34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
       34, 34, 34, 34, 34, 34, 34, 34, 34])}
    
    
    
    return storage_of_spectral_information[key]
